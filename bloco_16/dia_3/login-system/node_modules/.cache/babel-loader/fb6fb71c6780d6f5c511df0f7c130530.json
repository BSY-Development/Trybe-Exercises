{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Trybe Exercises/exercises/bloco_16/dia_3/login-system/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { actionLogin } from '../redux/actions/index';\nimport Homepage from './Homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.checkIfSigned = this.checkIfSigned.bind(this);\n  }\n\n  checkIfSigned() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      users,\n      login,\n      isLogged\n    } = this.props;\n    const user = users.find(item => item.email === email && item.password === password);\n\n    if (user) {\n      login(user);\n      isLogged ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 47\n      }, this);\n    } else {\n      console.log('user nao existe');\n    }\n  }\n\n  handleChange({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: email,\n          type: \"email\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: password,\n          type: \"password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.checkIfSigned,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  isLogged: state.isLogged\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: state => dispatch(actionLogin(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/bruno/Trybe Exercises/exercises/bloco_16/dia_3/login-system/src/pages/Login.js"],"names":["React","connect","Redirect","actionLogin","Homepage","Login","Component","constructor","state","email","password","handleChange","bind","checkIfSigned","users","login","isLogged","props","user","find","item","console","log","target","setState","name","value","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { actionLogin } from '../redux/actions/index';\nimport Homepage from './Homepage';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.checkIfSigned = this.checkIfSigned.bind(this);\n  }\n\n  checkIfSigned() {\n    const { email, password } = this.state;\n    const { users, login, isLogged } = this.props;\n    const user = users.find((item) => item.email === email && item.password === password);\n    if (user) {\n      login(user);\n      isLogged ? <Redirect to=\"/content\" /> : <Homepage />\n    } else {\n      console.log('user nao existe');\n    }\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    })\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h1>Login</h1>\n        <label>\n          E-mail:\n          <input name=\"email\" value={ email } type=\"email\" onChange={ this.handleChange } />\n        </label>\n        <label>\n          Password\n          <input name=\"password\" value={ password } type=\"password\" onChange={ this.handleChange } />\n        </label>\n        <button type=\"button\" onClick={ this.checkIfSigned }>Login</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  isLogged: state.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (state) => dispatch(actionLogin(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}